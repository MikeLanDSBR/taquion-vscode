{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "name": "Taquion",
  "scopeName": "source.taquion",
  "fileTypes": [
    "taq"
  ],
  "patterns": [
    { "include": "#comments" },
    { "include": "#packages" },
    { "include": "#keywords" },
    { "include": "#literals" },
    { "include": "#types" },
    { "include": "#strings" },
    { "include": "#functions" },
    { "include": "#variables" }
  ],
  "repository": {
    "comments": {
      "name": "comment.line.double-slash.taquion",
      "match": "//.*$"
    },
    "packages": {
      "patterns": [
        {
          "name": "keyword.other.package.taquion",
          "match": "\\bpackage\\b"
        },
        {
          "name": "entity.name.package.taquion",
          "match": "\\bmain\\b"
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "storage.type.function.taquion",
          "match": "\\bfunc\\b"
        },
        {
          "name": "storage.type.struct.taquion",
          "match": "\\btype\\b"
        },
        {
          "name": "keyword.control.flow.taquion",
          "match": "\\b(if|else|while|break|continue|return)\\b"
        },
        {
          "name": "storage.modifier.taquion",
          "match": "\\b(let|const)\\b"
        },
        {
          "name": "keyword.operator.taquion",
          "match": "(=|==|!=|<|>|\\*|\\/|\\-|\\+|%)"
        }
      ]
    },
    "literals": {
      "patterns": [
        {
          "name": "constant.numeric.integer.taquion",
          "match": "\\b-?[0-9]+\\b"
        },
        {
          "name": "constant.language.boolean.taquion",
          "match": "\\b(true|false)\\b"
        },
        {
          "name": "constant.other.user-defined.taquion",
          "match": "\\b[A-Z_][A-Z0-9_]*\\b"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "storage.type.taquion",
          "match": "\\b(string|int|int8|int16|int32|int64|float|float32|float64|bool|char)\\b"
        },
        {
          "name": "entity.name.type.taquion",
          "match": "(?<=\\btype\\s+)[A-Za-z_][A-Za-z0-9_]*"
        }
      ]
    },
    "strings": {
      "name": "string.quoted.double.taquion",
      "begin": "\"",
      "end": "\"",
      "patterns": [
        {
          "name": "constant.character.escape.taquion",
          "match": "\\\\."
        },
        {
          "name": "variable.other.interpolated.taquion",
          "match": "\\$\\{[A-Za-z_][A-Za-z0-9_.]*\\}"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function.taquion",
          "match": "(?<=\\bfunc\\s+)[A-Za-z_][A-Za-z0-9_]*"
        },
        {
          "name": "meta.function-call.taquion",
          "match": "(?<=[A-Za-z_][A-Za-z0-9_]*)\\b\\("
        }
      ]
    },
    "variables": {
      "patterns": [
        {
          "name": "variable.parameter.taquion",
          "match": "(?<=\\bfunc\\s+[A-Za-z_][A-Za-z0-9_]*\\s*\\([^\\)]*\\b)([A-Za-z_][A-Za-z0-9_]*)"
        },
        {
          "name": "variable.other.readonly.taquion",
          "match": "\\b[a-z_][A-Za-z0-9_]*\\b"
        }
      ]
    }
  }
}